# Nginx configuration untuk frontend production (Static Files)
# Location: /etc/nginx/sites-available/frontend.conf
# Optimized untuk serve static files hasil build

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name customer.merahputih-id.com;
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server untuk static files
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name customer.merahputih-id.com;
    
    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/customer.merahputih-id.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/customer.merahputih-id.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Document root untuk static files
    root /var/www/customerdb/frontend-mp/dist;
    index index.html;
    
    # Add proper MIME type handling
    location ~* \.css$ {
        add_header Content-Type "text/css; charset=utf-8";
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    location ~* \.js$ {
        add_header Content-Type "application/javascript; charset=utf-8";
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https: wss:;" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/atom+xml
        image/svg+xml;
    
    # Cache static assets dengan proper MIME types
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # Ensure proper MIME types
        location ~* \.css$ {
            add_header Content-Type "text/css; charset=utf-8";
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location ~* \.js$ {
            add_header Content-Type "application/javascript; charset=utf-8";
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Handle CORS untuk fonts
        location ~* \.(woff|woff2|ttf|eot)$ {
            add_header Access-Control-Allow-Origin "*";
            add_header Content-Type "font/woff2";
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Cache HTML dengan validasi - disable cache untuk proper loading
    location ~* \.(html|htm)$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        add_header Content-Type "text/html; charset=utf-8";
    }
    
    # API proxy ke backend NestJS (be-nest-mp)
    location /api/ {
        proxy_pass http://localhost:5000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # API timeout settings
        proxy_read_timeout 60s;
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        
        # CORS headers untuk API
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
    
    # Handle SPA routing - semua request diarahkan ke index.html
    location / {
        try_files $uri $uri/ /index.html;
        
        # Security headers untuk HTML
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        
        # Disable cache untuk index.html
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Robots.txt
    location = /robots.txt {
        log_not_found off;
        access_log off;
    }
    
    # Favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
    }
    
    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;
    
    # Logging
    access_log /var/log/nginx/frontend.access.log;
    error_log /var/log/nginx/frontend.error.log;
}
